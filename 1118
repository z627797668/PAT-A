#include<stdio.h>
#include<stdlib.h>
#include<set>
using namespace std;
const int maxn = 10005;
int father[maxn];
set<int>st;
void init()
{
	for (int i = 0; i < maxn; i++)
	{
		father[i] = i;
	}
}
int findFather(int x)
{
	int a = x;
	while (x!=father[x])
	{
		x = father[x];
	}
	while (a!=x)
	{
		int z = a;
		a = father[a];
		father[z] = x;
	}
	return  x;
}
void Union(int a, int b)
{
	int faA = findFather(a);
	int faB = findFather(b);
	if (faA != faB)
	{
		father[faA] = faB;
	}
}
int main()
{
	init();
	int N, K,Q;
	scanf("%d", &N);
	int temp,pre;
	for (int i = 0; i < N; i++)
	{
		scanf("%d", &K);
		for (int j = 0; j < K; j++)
		{
			scanf("%d", &temp);
			st.insert(temp);
			if (j == 0)
				pre=temp;
			else
			{
				Union(pre, temp);
				pre = temp;
			}
		}
	}
	int count = 0;
	for (set<int>::iterator it=st.begin(); it!=st.end(); it++)
	{
		if (findFather(*it) == *it)
		{
			count++;
		}
	}
	printf("%d %d\n", count, st.size());
	scanf("%d", &Q);
	int k1, k2;
	for (int i = 0; i < Q; i++)
	{
		scanf("%d %d", &k1, &k2);
		k1 = findFather(k1);
		k2 = findFather(k2);
		if (k1 == k2)
			printf("Yes\n");
		else
			printf("No\n");
	}
	system("pause");
	return 0;
}
