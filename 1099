#include<stdio.h>
#include<stdlib.h>
#include<queue>
#include<algorithm>
using namespace std;
const int maxn = 105;
int weight[maxn];
struct Node
{
	int data;
	int lchild;
	int rchild;
}node[maxn];
int N;
int wnum = 0;
int nump = 0;
void level_order(int root)
{
	queue<int>q;
	q.push(root);
	while (!q.empty())
	{
		int front = q.front();
		printf("%d", node[front].data);
		nump++;
		if (nump != N)
			printf(" ");
		q.pop();
		if (node[front].lchild != -1)q.push(node[front].lchild);
		if (node[front].rchild != -1)q.push(node[front].rchild);
	}
}
void inorder(int root)
{
	if (root == -1)
		return;
	else
	{
		inorder(node[root].lchild);
		node[root].data = weight[wnum++];
		inorder(node[root].rchild);
	}
}
int main()
{
	scanf("%d", &N);
	int l, r;
	for (int i = 0; i < N; i++)
	{
		scanf("%d %d", &l, &r);
		node[i].lchild = l;
		node[i].rchild = r;
	}
	for (int i = 0; i < N; i++)
	{
		scanf("%d", &weight[i]);
	}
	sort(weight, weight + N);
	inorder(0);
	level_order(0);
	system("pause");
	return 0;
}
