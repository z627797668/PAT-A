#include<stdio.h>
#include<stdlib.h>
struct node
{
	long long up;
	long long down;
};
node add(node a, node b)
{
	node ret;
	ret.down = a.down*b.down;
	ret.up = a.down*b.up + a.up*b.down;
	return ret;
}
long long gcd(long long a, long long b)
{
	if (b == 0)return a;
	else return gcd(b, a%b);
}
node simple(node a)
{
	if (a.down < 0)
	{
		a.down = -a.down;
		a.up = -a.up;
	}
	if (a.up == 0)
	{
		a.down = 1;
	}
	else
	{
		bool fu = false;
		if(a.up<0)
		{
			a.up = -a.up;
			fu = true;
		}
		int d = gcd(a.down, a.up);
		a.down /= d;
		a.up /= d;
		if (fu == true)
			a.up = -a.up;
	}
	return a;
}
void prin(node a)
{
	if (a.down == 1)
	{
		printf("%d",a.up);
	}
	else
	{
		if (a.up < 0) {
			a.up = -a.up;
			printf("-");
		}
		if (a.up / a.down > 0)
			printf("%lld %lld/%lld", a.up / a.down, a.up%a.down, a.down);
		else
			printf("%lld/%lld", a.up, a.down);
	}
}
int main()
{
	int N;
	scanf("%d", &N);
	node now;
	node ans;
	ans.up = 0;
	ans.down = 1;
	for (int i = 0; i < N; i++)
	{
		scanf("%lld/%lld", &now.up, &now.down);
		if (ans.up != 0)
		{
			ans = add(ans, now);
			ans=simple(ans);
		}
		else
		{
			ans.up = now.up;
			ans.down = now.down;
		}
	}
	ans = simple(ans);
	prin(ans);
	system("pause");
	return 0;
}
