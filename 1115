#include<stdio.h>
#include<stdlib.h>
#include<vector>
#include<queue>
using namespace std;
int N;
const int maxn = 1005;
int num[maxn];
struct node
{
	int level;
	int data;
	node*lchild;
	node*rchild;
};
void insert(node*&root, int data)
{
	if (root == NULL)
	{
		root = new node;
		root->rchild = root->lchild = NULL;
		root->data = data;
	}
	else {
		if (root->data >= data)
			insert(root->lchild, data);
		else
			insert(root->rchild, data);
	}
}
int maxdeepth = 0;
vector<int>vi[maxn];
void levelorder(node*root)
{
	queue<node*>q;
	root->level = 1;
	q.push(root);
	while (!q.empty())
	{
		node*now = q.front();
		q.pop();
		if (now->level > maxdeepth)
		{
			maxdeepth = now->level;
		}
		vi[now->level].push_back(now->data);
		if (now->lchild != NULL)
		{
			now->lchild->level = now->level + 1;
			q.push(now->lchild);
		}
		if (now->rchild != NULL)
		{
			now->rchild->level = now->level + 1;
			q.push(now->rchild);
		}
	}
}
int main()
{
	scanf("%d", &N);
	for (int i = 0; i < N; i++)
	{
		scanf("%d", &num[i]);
	}
	node*root = new node;
	root = NULL;
	for (int i = 0; i < N; i++)
	{
		insert(root, num[i]);
	}
	levelorder(root);
	printf("%d + %d = %d", vi[maxdeepth].size(), vi[maxdeepth-1].size(), vi[maxdeepth].size()+vi[maxdeepth - 1].size());
	system("pause");
	return 0;
}
